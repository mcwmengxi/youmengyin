import{_ as s,c as e,o as a,V as n}from"./chunks/framework.YX7VVfbY.js";const h=JSON.parse('{"title":"Redis","description":"","frontmatter":{},"headers":[],"relativePath":"docs/devops/redis.md","filePath":"docs/devops/redis.md","lastUpdated":1706517028000}'),p={name:"docs/devops/redis.md"},l=n(`<h1 id="redis" tabindex="-1">Redis <a class="header-anchor" href="#redis" aria-label="Permalink to &quot;Redis&quot;">​</a></h1><ul><li><p>单机版mysql 1.数据量太大，机器放不下 2.数据索引 B+Tree,内存也不够 3.访问量变大(读写混合)</p></li><li><p>Memcached(缓存) + mysql +垂直拆分 优化数据结构和索引 文件缓存IO Memcached(缓存) 读写分离</p></li><li><p>分库分表 水平拆分(集群)</p></li><li></li></ul><h2 id="nosql" tabindex="-1">NoSQL <a class="header-anchor" href="#nosql" aria-label="Permalink to &quot;NoSQL&quot;">​</a></h2><blockquote><p>什么是NoSQL</p></blockquote><p>NoSQL=Not Only SQL(不仅仅是SQL) 关系型数据库:表格,行,列 泛指非关系型数据库的,随着web2.0互联网的诞生!传统的关系型数据库很难对付web2.0时代!尤其是超大规模的高并发的社区!暴露出来很多难以克服的问题,NoSQL在当今大数据环境下发展的十分迅速,Redis是发展最快的,而且是我们当下必须要掌握的一个技术! 很多的数据类型用户的个人信息,社交网络,地理位置。这些数据类型的存储不需要一个固定的格式!不需要多月的操作就可以横向扩展的! Map&lt;String,Object&gt;使用键值对来控制!</p><blockquote><p>NoSql 特点</p></blockquote><p>解耦! 1、方便扩展(数据之间没有关系,很好扩展!) 2、大数据量高性能(Redis一秒写8万次,读取11万,NoSQL的缓存记录级,是一种细粒度的缓存,性能会比较高!) 3、数据类型是多样型的!(不需要事先设计数据库!随取随用!如果是数据量十分大的表,很多人就无法设计了!) 4、传统RDBMS和NoSQL</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>传统的RDBMS</span></span>
<span class="line"><span>-结构化组织</span></span>
<span class="line"><span>-SQL</span></span>
<span class="line"><span>-数据和关系都存在单独的表中</span></span>
<span class="line"><span>-操作操作,数据定义语言</span></span>
<span class="line"><span>-严格的一致性</span></span>
<span class="line"><span>-基础的事务</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Nosql</span></span>
<span class="line"><span>-不仅仅是数据</span></span>
<span class="line"><span>-没有固定的查询语言</span></span>
<span class="line"><span>-键值对存储,列存储,文档存储,图形数据库(社交关系)</span></span>
<span class="line"><span>-最终一致性</span></span>
<span class="line"><span>-CAP定理和BASE(异地多活)</span></span>
<span class="line"><span>-高性能,高可用,高可扩</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="nosql的四大分类" tabindex="-1">NoSQL的四大分类 <a class="header-anchor" href="#nosql的四大分类" aria-label="Permalink to &quot;NoSQL的四大分类&quot;">​</a></h2><p><strong>KV键值对:</strong> 新浪:Redis 美团:Redis+Tair· 阿里、百度:Redis+memecache</p><p><strong>文档型数据库(bson格式和json一样):</strong></p><ul><li><p>MongoDB(一般必须要掌握)</p><ul><li>MongoDB是一个基于分布式文件存储的数据库,C++编写,主要用来处理大量的文档!</li><li>MongoDB是一个介于关系型数据库和非关系型数据中中间的产品!MongoDB是非关系型数据库中功能最丰富,最像关系型数据库的!</li></ul></li><li><p>ConthDB</p></li></ul><p><strong>列存储数据库</strong></p><ul><li>HBase</li><li>分布式文件系统</li></ul><p><strong>图关系数据库</strong></p><h2 id="redis-1" tabindex="-1">Redis <a class="header-anchor" href="#redis-1" aria-label="Permalink to &quot;Redis&quot;">​</a></h2><blockquote><p>Redis是什么？</p></blockquote><p>Redis(Remote Dictionary Server),即远程字典服务!是一个开源的使用ANSIC语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库,并提供多种语言的API.</p><p>redis会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件,并且在此基础上实现了master-slave(主从)同步。免费和开源!是当下最热门的NoSQL技术之一!也被人们称之为结构化数据库!</p><blockquote><p>Redis能干什么？</p></blockquote><p>1、内存存储、持久化,内存中是断电即失、所以说持久化很重要(rdb、aof) 2、效率高,可以用于高速缓存 3、发布订阅系统 4、地图信息分析 5、计时器、计数器(浏览量!)</p><blockquote><p>特性</p></blockquote><p>1、多样的数据类型 2、持久化 3、集群 4、事务</p><h2 id="安装redis" tabindex="-1">安装Redis <a class="header-anchor" href="#安装redis" aria-label="Permalink to &quot;安装Redis&quot;">​</a></h2><p>移动到opt目录下 <code>mv redis-6.2.6.tar.gz /opt</code> 解压文件 <code>tar -zxvf redis-5.0.8.tar.gz</code> 安装gcc环境<code>yum install gcc-c++</code> gcc -v redis安装目录下执行<code>make</code>命令 二次确认<code>make install</code> Linux默认安装路径<code>/usr/local/bin</code> conf复制到/usr/local/bin/mengxi目录下作为自定义配置 <code>cp /opt/redis-6.2.6/redis.conf mengxi</code> daemonize yes 注释bind protected-mode no 以当前目录下配置启动 <code>redis-server mengxi/redis.conf</code> 客户端<code>redis-cli -p 6379</code> shutdown停止 quit退出</p>`,26),i=[l];function o(r,c,d,t,u,b){return a(),e("div",null,i)}const g=s(p,[["render",o]]);export{h as __pageData,g as default};
