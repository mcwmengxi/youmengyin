import{_ as t,c as a,o as c,m as o,a as e}from"./chunks/framework.C2K-FukO.js";const P=JSON.parse('{"title":"docker部署go项目","description":"","frontmatter":{},"headers":[],"relativePath":"docs/go/go-docker.md","filePath":"docs/go/go-docker.md","lastUpdated":1715534646000}'),s={name:"docs/go/go-docker.md"},r=o("h1",{id:"docker部署go项目",tabindex:"-1"},[e("docker部署go项目 "),o("a",{class:"header-anchor",href:"#docker部署go项目","aria-label":'Permalink to "docker部署go项目"'},"​")],-1),d=o("p",null,"使用docker部署go项目有一个通用的范式,那就是分阶段构建",-1),n=o("h2",{id:"分阶段构建",tabindex:"-1"},[e("分阶段构建 "),o("a",{class:"header-anchor",href:"#分阶段构建","aria-label":'Permalink to "分阶段构建"'},"​")],-1),l=o("p",null,"go的部署只需要编译后的可执行文件就可以了，并不需要go的环境",-1),i=o("p",null,"那么我们可以先在有go环境的容器中对项目进行构建，得到构建后的可执行文件",-1),_=o("p",null,"然后再把这个可执行文件放到一个比较小的镜像容器里面",-1),h=[r,d,n,l,i,_];function g(p,k,m,f,u,x){return c(),a("div",null,h)}const $=t(s,[["render",g]]);export{P as __pageData,$ as default};
